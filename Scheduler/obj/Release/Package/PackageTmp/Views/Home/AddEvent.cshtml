@model Scheduler.Models.Event

@{
    ViewBag.Title = "AddEvent";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css">
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        $('#regulerItemButton').click(function () {
            $('#regularitem').removeClass();
            $('#constantForPeriod').addClass("hidden");
        });
        $('#constantItemButton').click(function () {
            $('#constantForPeriod').removeClass();
            $('#regularitem').addClass("hidden");
        });
        $(function () {
            $('#datepicker').datepicker();
        });
    });
</script>


@if (TempData["SuccessAdd"] != null)
{<div class="alert alert-success">
        <b>Evet added succesfully</b>
    </div>

}
<div id="SelectType">
    <h4 style="margin-top:3%">Select Event Type:</h4>
    <br />
    <input type="button" id="regulerItemButton" style="width:200%" value="Regular Event" class="btn btn-primary" />
    <input type="button" id="constantItemButton" style="width:100%" value="Constant Event for a Period" class="btn btn-success" />
</div>
<div id="regularitem" class="hidden">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Subject, "Subject:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, "Description:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Start, "Start Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Start, "Enter the date in 'Year-Month-Day Hour:Minute' format.(Example:2018-09-13 10:30)", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.End, "End Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.End, "Enter the date in 'Year-Month-Day Hour:Minute' format.(Example:2018-09-13 10:30)", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group hidden">
                    @Html.LabelFor(model => model.ThemeColor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="ColorId" type="text" value="">
                        @Html.ValidationMessageFor(model => model.ThemeColor, "", new { @class = "text-danger" })
                    </div>
                </div*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsFullDay,htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsFullDay)
                            @Html.ValidationMessageFor(model => model.IsFullDay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
            @*<div class="form-group">
                    @Html.LabelFor(model => model.AmountWeek, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AmountWeek, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AmountWeek, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

</div>
<div id="constantForPeriod" class="hidden">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Subject, "Subject:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, "Description:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="datepicker">
                @Html.LabelFor(model => model.Start, "Start Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Start, "Enter the date in 'Year-Month-Day Hour:Minute' format.(Example:2018-09-13 10:30)", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.End, "End Date:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.End, "Enter the date in 'Year-Month-Day Hour:Minute' format.(Example:2018-09-13 10:30)", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.ThemeColor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ThemeColor, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ThemeColor, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsFullDay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsFullDay)
                            @Html.ValidationMessageFor(model => model.IsFullDay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Permanent, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Permanent)
                            @Html.ValidationMessageFor(model => model.Permanent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.AmountWeek, "Weeks will it last:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AmountWeek, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AmountWeek, "Enter a number that represents number of weeks this event will last after first week.", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>




